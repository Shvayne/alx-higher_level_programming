tests for 2-matrix_divided.py
=====================================

This module defines a matrix division function ``matrix_divided(matrix, div)``.

Usage
=====

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.

::

    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [[3, 6, 9], [12, 15, 18]]
    >>> print(matrix_divided(matrix, 3))
    [[1.0, 2.0, 3.0], [4.0, 5.0, 6.0]]

Resulting matrix is round to 2dp

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

The original matrix is left unchanged.

::

    >>> print(matrix)
    [[1, 2, 3], [4, 5, 6]]

Can handle floating-point numbers.

::

    >>> matrix = [[1.1, 2.2, 3.3], [4.4, 5.5, 6.6]]
    >>> print(matrix_divided(matrix, 3))
    [[0.37, 0.73, 1.1], [1.47, 1.83, 2.2]]

can handle negative numbers.

::
    >>> matrix = [[-1.1, -2.2, -3.3], [4.4, 5.5, 6.6]]
    >>> print(matrix_divided(matrix, 3))
    [[-0.37, -0.73, -1.1], [1.47, 1.83, 2.2]]

Integers and floats can be combined.

::

    >>> matrix = [[1, -2.2, 3, 4.4, 5], [-6.6, 7.00, 8, 9.999, 10]]
    >>> print(matrix_divided(matrix, 3))
    [[0.33, -0.73, 1.0, 1.47, 1.67], [-2.2, 2.33, 2.67, 3.33, 3.33]]

Invalid Matrices
==============

matrix must be a list of lists

::

    >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of list) of integers/floats

::

    >>> matrix = None
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of list) of integers/floats

empty list will return nothing

::

    >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    []

An empty list of lists will also succeed.

::

    >>> matrix = [[], []]
    >>> print(matrix_divided(matrix, 3))
    [[], []]

``matrix`` must be specifically a list of lists.

::

    >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of list) of integers/floats

::

    >>> matrix = [[1, 2, 3], [4, "not a number", 6]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: matrix must be a matrix (list of list) of integers/floats

All the rows in ``matrix`` must be the same size.

::

    >>> matrix = [[1, 2, 3, 4], [5, 6, 7]]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
        ...
    TypeError: Each row of the matrix must have the same size

Invalid Divisors
================

``div`` must be either an int or float.

::

    >>> matrix = [[1, 2, 3], [4, 5, 6]]
    >>> print(matrix_divided(matrix, "not a number"))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

::

    >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
        ...
    TypeError: div must be a number

``div`` must be a non zero value

::

    >>> print(matrix_divided(matrix, 0))
    Traceback (most recent call last):
        ...
    ZeroDivisionError: division by zero